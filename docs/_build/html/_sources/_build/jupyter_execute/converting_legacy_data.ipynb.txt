{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Transform legacy format\n",
    "\n",
    "Transform one file (or all files within the given directory) from legacy TSDB to the current TSDF format (v0.1)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "from tsdf.legacy_tsdf_utils import (\n",
    "    generate_tsdf_metadata_from_tsdb,\n",
    "    convert_file_tsdb_to_tsdf,\n",
    "    convert_files_tsdb_to_tsdf,\n",
    ")\n",
    "\n",
    "data_dir = 'data'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Path to the metadata file\n",
    "path_to_file = os.path.join(data_dir, \"ppp_format_meta_legacy.json\")\n",
    "path_to_new_file = os.path.join(data_dir, \"tmp_ppp_format_meta.json\")\n",
    "\n",
    "# Generate a TSDF metadata file from TSDB\n",
    "generate_tsdf_metadata_from_tsdb(path_to_file, path_to_new_file)\n",
    "\n",
    "# Convert a TSDB metadata file to TSDB format\n",
    "# convert_metadata_tsdb_to_tsdf(path_to_file)\n",
    "\n",
    "# Convert all metadata files in the directory from TSDB to TSDF format\n",
    "# convert_metadatas_tsdb_to_tsdf(path_to_dir)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "tsdf-zVA6tG---py3.9",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}