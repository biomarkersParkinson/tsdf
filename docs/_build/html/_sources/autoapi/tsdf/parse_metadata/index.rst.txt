tsdf.parse_metadata
===================

.. py:module:: tsdf.parse_metadata

.. autoapi-nested-parse::

   Module for parsing TSDF metadata files.

   Reference: https://arxiv.org/abs/2211.11294



Functions
---------

.. autoapisummary::

   tsdf.parse_metadata.read_data
   tsdf.parse_metadata._read_struct
   tsdf.parse_metadata.is_mandatory_type
   tsdf.parse_metadata._contains_file_name
   tsdf.parse_metadata.contains_tsdf_mandatory_fields
   tsdf.parse_metadata._check_tsdf_property_format
   tsdf.parse_metadata.get_file_metadata_at_index
   tsdf.parse_metadata.confirm_dir_of_metadata
   tsdf.parse_metadata.is_iso8601
   tsdf.parse_metadata.validate_datetimes


Module Contents
---------------

.. py:function:: read_data(data: Any, source_path: str) -> Dict[str, tsdf.tsdfmetadata.TSDFMetadata]

   Function used to parse the JSON object containing TSDF metadata. It returns a
   list of TSDFMetadata objects, where each object describes formatting of a binary file.

   :param data: JSON object containing TSDF metadata.
   :param source_path: path to the metadata file.

   :return: list of TSDFMetadata objects.

   :raises tsdf_metadata.TSDFMetadataFieldValueError: if the TSDF metadata file is missing a mandatory field.


.. py:function:: _read_struct(data: Any, defined_properties: Dict[str, Any], source_path, version: str) -> Dict[str, tsdf.tsdfmetadata.TSDFMetadata]

   Recursive method used to parse the TSDF metadata in a hierarchical
   order (from the root towards the leaves).

   :param data: JSON object containing TSDF metadata.
   :param defined_properties: dictionary containing all the properties defined at the current level of the TSDF structure.
   :param source_path: path to the metadata file.
   :param version: version of the TSDF used within the file.

   :return: list of TSDFMetadata objects.

   :raises tsdf_metadata.TSDFMetadataFieldError: if the TSDF metadata file is missing a mandatory field.


.. py:function:: is_mandatory_type(key: str, version: str) -> bool

   Function returns True if the field that corresponds to the
   key is mandatory for the given TSDF version, otherwise it returns False.

   :param key: key of the TSDF metadata field.
   :param version: version of the TSDF used within the file.

   :return: True if the field is mandatory, otherwise False.


.. py:function:: _contains_file_name(data: Any) -> bool

   Function return True if the data contains the "file_name" key,
   and thus, represents nested data elements.
   Otherwise it returns False.

   :param data: data to be checked.

   :return: True if the data contains the "file_name" key, otherwise False.


.. py:function:: contains_tsdf_mandatory_fields(dictionary: Dict[str, Any]) -> bool

   Verifies that all the mandatory properties for TSDF metadata are provided,
   and are in the right format.

   :param dictionary: dictionary containing TSDF metadata.

   :return: True if the metadata is well formatted.

   :raises tsdf_metadata.TSDFMetadataFieldError: if the TSDF metadata file is missing a mandatory field.
   :raises tsdf_metadata.TSDFMetadataFieldValueError: if the TSDF metadata file contains an invalid value.


.. py:function:: _check_tsdf_property_format(key: str, value, version: str) -> None

   Function checks whether the value of the mandatory TSDF field specified by the key
   is of the expected data format.\
   `Note: If the key is not mandatory the function does not perform any checks.`

   :param key: key of the TSDF metadata field.
   :param value: value of the TSDF metadata field.
   :param version: version of the TSDF used within the file.

   :raises tsdf_metadata.TSDFMetadataFieldValueError: if the TSDF metadata file contains an invalid value.


.. py:function:: get_file_metadata_at_index(metadata: Dict[str, tsdf.tsdfmetadata.TSDFMetadata], index: int) -> tsdf.tsdfmetadata.TSDFMetadata

   Returns the metadata object at the position defined by the index.

   :param metadata: dictionary containing TSDF metadata.
   :param index: index of the metadata object to be returned.

   :return: metadata object at the position defined by the index.

   :raises IndexError: if the index is out of range.


.. py:function:: confirm_dir_of_metadata(metadatas: List[tsdf.tsdfmetadata.TSDFMetadata]) -> None

   The method is used to confirm whether all the metadata files are expected in the same directory.

   :param metadatas: list of metadata objects.

   :raises tsdf_metadata.TSDFMetadataFieldValueError: if the metadata files are not in the same directory or describe the same binaries.


.. py:function:: is_iso8601(date_string: str) -> bool

   Checks if the given date string is in ISO8601 format.

   :param date_string: date string to be checked.


.. py:function:: validate_datetimes(metadata: tsdf.tsdfmetadata.TSDFMetadata) -> bool

   Validates the start and end date format of the TSDFMetaData object.


