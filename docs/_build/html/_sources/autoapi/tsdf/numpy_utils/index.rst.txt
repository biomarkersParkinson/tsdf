tsdf.numpy_utils
================

.. py:module:: tsdf.numpy_utils


Attributes
----------

.. autoapisummary::

   tsdf.numpy_utils._map_from_numpy_types
   tsdf.numpy_utils._map_to_numpy_types
   tsdf.numpy_utils._map_from_numpy_endianness
   tsdf.numpy_utils._map_to_numpy_endianness


Functions
---------

.. autoapisummary::

   tsdf.numpy_utils.data_type_numpy_to_tsdf
   tsdf.numpy_utils.data_type_tsdf_to_numpy
   tsdf.numpy_utils.bits_numpy_to_tsdf
   tsdf.numpy_utils.bytes_tsdf_to_numpy
   tsdf.numpy_utils.endianness_numpy_to_tsdf
   tsdf.numpy_utils.endianness_tsdf_to_numpy
   tsdf.numpy_utils.rows_numpy_to_tsdf


Module Contents
---------------

.. py:data:: _map_from_numpy_types

   Mapping of NumPy data types to their TSDF metadata annotations.

.. py:function:: data_type_numpy_to_tsdf(data: numpy.ndarray)

   Compute the TSDF metadata 'data_type' value, based on the NumPy data.


.. py:data:: _map_to_numpy_types

   Mapping of data types that are supported by TSDF to
   their NumPy representation used for parsing.

.. py:function:: data_type_tsdf_to_numpy(data_type: str) -> str

   Compute the the NumPy data type, based on the TSDF metadata 'data_type' value.

   :param data_type: TSDF metadata 'data_type' value.

   :return: NumPy data type (as a char).


.. py:function:: bits_numpy_to_tsdf(data: numpy.ndarray) -> int

   Compute TSDF metadata 'n_bits' value, based on the NumPy data.

   :param data: NumPy data.

   :return: TSDF metadata 'n_bits' value.


.. py:function:: bytes_tsdf_to_numpy(n_bits: int)

   Compute the the NumPy byte number, based on the TSDF metadata 'n_bits' value.

   :param n_bits: TSDF metadata 'n_bits' value.

   :return: NumPy byte number.


.. py:data:: _map_from_numpy_endianness

   Supported endianness values.

.. py:function:: endianness_numpy_to_tsdf(data: numpy.ndarray) -> str

   Compute TSDF metadata 'data_type' value, based on the NumPy data.

   :param data: NumPy data.

   :return: TSDF metadata 'data_type' value (as a string).


.. py:data:: _map_to_numpy_endianness

   Supported endianness values.

.. py:function:: endianness_tsdf_to_numpy(endianness: str) -> str

   Compute TSDF metadata 'data_type' value, based on the NumPy data.

   :param endianness: TSDF metadata 'data_type' value.

   :return: NumPy data type (as a char).


.. py:function:: rows_numpy_to_tsdf(data: numpy.ndarray) -> int

   Compute TSDF metadata 'rows' value, based on the NumPy data.

   :param data: NumPy data.

   :return: TSDF metadata 'rows' value.


